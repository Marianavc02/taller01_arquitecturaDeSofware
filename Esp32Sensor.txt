/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled 2"
  https://create.arduino.cc/cloud/things/215d0584-61fb-4515-b3c0-fe945822dfd3 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  String mensaje;
  CloudMotionSensor google;
  bool alarma;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"
#define TRIG 19     // Pin del trigger
#define ECHO 21      // Pin del echo
#define BUZZER 5   // Pin del buzzer
#define LED 2        // Pin del LED

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information you’ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();

  
    pinMode(TRIG, OUTPUT);
    pinMode(ECHO, INPUT);
    pinMode(BUZZER, OUTPUT);
    pinMode(LED, OUTPUT);

  
}

void loop() {
  ArduinoCloud.update();
  // Your code here 

   long duracion;
    int distancia;

    // Enviar pulso ultrasónico
    digitalWrite(TRIG, LOW);
    delayMicroseconds(2);
    digitalWrite(TRIG, HIGH);
    delayMicroseconds(10);
    digitalWrite(TRIG, LOW);

    // Leer la señal de respuesta
    duracion = pulseIn(ECHO, HIGH);
    distancia = duracion * 0.034 / 2;  // Convertir tiempo a distancia en cm

    Serial.print("Distancia: ");
    Serial.print(distancia);
    Serial.println(" cm");

    // Si la distancia es menor a 30 cm, activa la alarma
    if ( distancia > 30) {
        mensaje = "ALERTA ACTIVADA!!";
        alarma = false;  // Activa el LED en el dashboard
        digitalWrite(BUZZER, HIGH);
        digitalWrite(LED, HIGH);
        google = false;
    } else {
        mensaje = "Todo en orden";
        alarma = true;
        google=true; 
        digitalWrite(BUZZER, LOW);
        digitalWrite(LED, LOW);
    }

    delay(500);  // Esperar un poco antes de la siguiente medición
  
  
}



/*
  Since SensorUltrasonido is READ_WRITE variable, onSensorUltrasonidoChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onSensorUltrasonidoChange()  {
  // Add your code here to act upon SensorUltrasonido change
}

/*
  Since Mensaje is READ_WRITE variable, onMensajeChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onMensajeChange()  {
  // Add your code here to act upon Mensaje change
}

/*
  Since Alarma is READ_WRITE variable, onAlarmaChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onAlarmaChange()  {
  // Add your code here to act upon Alarma change
}



